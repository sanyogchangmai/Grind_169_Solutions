Approach - Sort activities based on their end time and perform greedy

Time = O(nlogn) | Space = O(n)

class Solution
{
    static class Pair {
        int start;
        int end;
        Pair(int s, int e) {
            start = s;
            end = e;
        }
    }
    public static int activitySelection(int start[], int end[], int n)
    {
        Pair[] arr = new Pair[n];
        for(int i=0; i<start.length; i++) {
            arr[i] = new Pair(start[i], end[i]);
        }
        
        Arrays.sort(arr, (a,b) -> a.end - b.end);
        
        int res = 1;
        int prev = 0;
        
        for(int i=1; i<arr.length; i++) {
            if(arr[i].start > arr[prev].end) {
                res++;
                prev = i;
            }
        }
        
        return res;
    }
}