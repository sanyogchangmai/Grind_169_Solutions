    Approach 1

    Time = O(n*n) | Space = O(1)
    
    int[] arr = {1, 2, 3, 7};
    
    for(int i=0; i<arr.length-1; i++) {
      for(int j=i; j<arr.length; j++) {
        System.out.print(arr[j] + " ");
      }
      System.out.println();
    }

    for(int j=0; j<arr.length; j++) {
        System.out.println(arr[j]);
    }   Time = O(n*n) | Space = O(1)
    
    int[] arr = {1, 2, 3, 7};
    
    for(int i=0; i<arr.length-1; i++) {
      for(int j=i; j<arr.length; j++) {
        System.out.print(arr[j] + " ");
      }
      System.out.println();
    }

    for(int j=0; j<arr.length; j++) {
        System.out.println(arr[j]);
    }

--------------------------------------------------------------------------

    Approach 2

    Time = O(n^3) | Space = O(1) 

    for(int i=0; i<arr.length; i++) {
      for(int j=i; j<arr.length; j++) {
        for(int k=i; k<=j; k++) {
          System.out.print(arr[k] + " ");
        }
        System.out.println();
      }
    }