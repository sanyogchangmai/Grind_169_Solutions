Time = O(n) | Space = O(1)

class Solution {
    int getPairsCount(int[] arr, int n, int k) {
        int count = 0;
        for(int i=0; i<n-1; i++) {
            for(int j=i+1; j<n; j++) {
                if(arr[i] + arr[j] == k) {
                    count++;
                }
            }
        }
        return count;
    }
}

--------------------------------------------------------------------------------

Time = O(n) | Space = O(n)

class Solution {
    int getPairsCount(int[] arr, int n, int k) {
        int count = 0;
        HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
        for(int i=0; i<n; i++) {
            int num = k - arr[i];
            if(map.containsKey(num)) {
                count += map.get(num);
            }
            map.put(arr[i], map.getOrDefault(arr[i], 0) + 1);
        }
        return count;
    }
}