Approach 1 - Iteration with Queue

Time = O() | Space = O(n)

class Solution {
    List<List<Integer>> res = new ArrayList<List<Integer>>();
    public List<List<Integer>> levelOrder(Node root) {
        if(root == null) {
            return res;
        }

        Queue<Node> q = new LinkedList<Node>();
        q.offer(root);

        while(q.size() != 0) {
            List<Integer> temp = new ArrayList<Integer>();
            int size = q.size();
            for(int i=0; i<size; i++) {
                Node n = q.poll();
                for(Node it: n.children) {
                    if(it != null) {
                        q.offer(it);
                    }
                }
                temp.add(n.val);
            }
            res.add(temp);
        }

        return res;
    }
}