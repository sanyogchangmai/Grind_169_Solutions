Approach 1 - Using recursion

Time = O(n) | Space = O(n)

class Solution {
    static boolean solve(TreeNode p, TreeNode q) {
        if(p == null && q == null) {
            return true;
        }
        if(p == null || q == null) {
            return false;
        }
        if(p.val != q.val) {
            return false;
        }
        boolean call1 = solve(p.left, q.right);
        boolean call2 = solve(p.right, q.left);
        return call1 && call2;
    }
    public boolean isSymmetric(TreeNode root) {
        return solve(root.left, root.right);
    }
}